apiVersion: apps/v1
kind: Deployment
metadata:
  name: aggressive-load-test
  namespace: shortly
  labels:
    app: aggressive-load-test
spec:
  replicas: 5  # Multiple pods for parallel load
  selector:
    matchLabels:
      app: aggressive-load-test
  template:
    metadata:
      labels:
        app: aggressive-load-test
    spec:
      containers:
      - name: load-generator
        image: curlimages/curl:latest
        command: ["/bin/sh"]
        args:
        - -c
        - |
          echo "Starting aggressive load test..."
          echo "Backend service: backend.shortly.svc.cluster.local:8000"
          
          # Function to generate load
          generate_load() {
            local endpoint=$1
            local name=$2
            echo "Testing $name endpoint..."
            
            while true; do
              # Multiple parallel requests
              for i in {1..10}; do
                curl -s "http://backend.shortly.svc.cluster.local:8000$endpoint" > /dev/null &
              done
              wait  # Wait for all background jobs
              sleep 0.1  # Short pause between batches
            done
          }
          
          # Start multiple background load generators
          generate_load "/load-test" "CPU-intensive" &
          generate_load "/health" "Health" &
          generate_load "/" "Root" &
          
          # Keep container running
          wait
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Pod
metadata:
  name: stress-test-pod
  namespace: shortly
  labels:
    app: stress-test
spec:
  containers:
  - name: stress-test
    image: alpine:latest
    command: ["/bin/sh"]
    args:
    - -c
    - |
      # Install curl
      apk add --no-cache curl
      
      echo "Starting intensive stress test..."
      
      # Parallel stress testing
      for worker in {1..20}; do
        {
          while true; do
            # Hit CPU-intensive endpoint
            curl -s http://backend.shortly.svc.cluster.local:8000/load-test
            curl -s http://backend.shortly.svc.cluster.local:8000/health
            curl -s http://backend.shortly.svc.cluster.local:8000/
          done
        } &
      done
      
      # Keep pod running
      wait
  restartPolicy: Never
---
apiVersion: batch/v1
kind: Job
metadata:
  name: load-test-job
  namespace: shortly
spec:
  parallelism: 10  # Run 10 pods in parallel
  completions: 10
  template:
    spec:
      containers:
      - name: load-test
        image: busybox:latest
        command: ["/bin/sh"]
        args:
        - -c
        - |
          # Install wget (busybox has wget built-in)
          echo "Starting load test worker..."
          
          # Continuous load for 10 minutes
          end_time=$(($(date +%s) + 600))
          
          while [ $(date +%s) -lt $end_time ]; do
            # Rapid fire requests
            for i in $(seq 1 50); do
              wget -q -O /dev/null http://backend.shortly.svc.cluster.local:8000/load-test &
              wget -q -O /dev/null http://backend.shortly.svc.cluster.local:8000/health &
            done
            wait
            sleep 0.1
          done
          
          echo "Load test completed"
      restartPolicy: Never
  backoffLimit: 3 