apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: shortly
  labels:
    app: redis
    component: database
spec:
  replicas: 1  # Redis is stateful, single instance
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
        component: database
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
          name: redis
        volumeMounts:
        - name: redis-storage
          mountPath: /data
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 5
          periodSeconds: 5
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false  # Redis runs as root by default
          runAsUser: 999  # Redis user ID
          capabilities:
            drop:
            - ALL
      volumes:
      - name: redis-storage
        persistentVolumeClaim:
          claimName: redis-data
      securityContext:
        fsGroup: 999  # Redis group for proper volume permissions 