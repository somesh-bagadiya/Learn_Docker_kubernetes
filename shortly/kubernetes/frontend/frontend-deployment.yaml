apiVersion: apps/v1
kind: Deployment
metadata:
  name: shortly-frontend
  namespace: shortly
  labels:
    app: shortly-frontend
    component: web
spec:
  replicas: 2  # Load balanced frontend
  selector:
    matchLabels:
      app: shortly-frontend
  template:
    metadata:
      labels:
        app: shortly-frontend
        component: web
    spec:
      containers:
      - name: frontend
        image: 515966507719.dkr.ecr.us-west-1.amazonaws.com/shortly-frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: REACT_APP_API_URL
          value: "http://backend:8000"  # Internal service discovery
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 101  # nginx user
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-run
          mountPath: /var/run
      volumes:
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}
      securityContext:
        fsGroup: 101
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1 